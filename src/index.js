import dotenv from "dotenv";
import app from "./app.js";
import connectDB from "./config/db.js";
import { validateEnvironment, getEnvironmentInfo } from "./utils/envValidation.js";

dotenv.config({
  path: "./.env",
});

// Validate environment variables before starting
if (!validateEnvironment()) {
  console.error("‚ùå Server startup aborted due to missing environment variables.");
  process.exit(1);
}

const envInfo = getEnvironmentInfo();
console.log("üöÄ Starting Madhutube Backend Server...");
console.log(`üì¶ Environment: ${envInfo.nodeEnv}`);
console.log(`üîå Port: ${envInfo.port}`);
console.log(`‚òÅÔ∏è  Cloudinary: ${envInfo.hasCloudinary ? '‚úÖ Configured' : '‚ùå Missing'}`);
console.log(`üóÑÔ∏è  MongoDB: ${envInfo.hasMongoDB ? '‚úÖ Configured' : '‚ùå Missing'}`);
console.log(`üîê JWT: ${envInfo.hasJWTSecrets ? '‚úÖ Configured' : '‚ùå Missing'}`);

const serverPort = process.env.PORT || 3000;

connectDB()
  .then(() => {
    app.listen(serverPort, () => {
      console.log(`üéâ Server running successfully on port: ${serverPort}`);
      console.log(`üåê Access URL: http://localhost:${serverPort}`);
      console.log(`üè• Health check: http://localhost:${serverPort}/api/v1/healthcheck`);
    });
  })
  .catch((error) => {
    console.error("‚ùå Server connection error:", error);
    process.exit(1);
  });
